openapi: 3.0.3
info:
  title: Kollus Live API
  description: Kollus Live API를 사용하여 실시간 라이브 스트리밍 서비스를 구현할 수 있습니다.
  version: 1.0.0
  contact:
    name: Kollus Support
    url: https://www.catenoid.net/ko/contact/
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.kollus.com/v1
    description: Production server
  - url: https://staging-api.kollus.com/v1
    description: Staging server

security:
  - BearerAuth: []

paths:
  /live/streams:
    get:
      summary: 라이브 스트림 목록 조회
      description: 생성된 라이브 스트림 목록을 조회합니다.
      tags:
        - Live Streams
      parameters:
        - name: page
          in: query
          description: 페이지 번호
          required: false
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: 페이지당 항목 수
          required: false
          schema:
            type: integer
            default: 20
            maximum: 100
        - name: status
          in: query
          description: 스트림 상태 필터
          required: false
          schema:
            type: string
            enum: [ready, live, ended, error]
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: 라이브 스트림 생성
      description: 새로운 라이브 스트림을 생성합니다.
      tags:
        - Live Streams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamCreateRequest'
      responses:
        '201':
          description: 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamCreateResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /live/streams/{stream_id}:
    get:
      summary: 라이브 스트림 상세 조회
      description: 특정 라이브 스트림의 상세 정보를 조회합니다.
      tags:
        - Live Streams
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamDetailResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

    put:
      summary: 라이브 스트림 정보 수정
      description: 라이브 스트림의 설정을 수정합니다.
      tags:
        - Live Streams
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamUpdateRequest'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamDetailResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      summary: 라이브 스트림 삭제
      description: 라이브 스트림을 삭제합니다.
      tags:
        - Live Streams
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
      responses:
        '204':
          description: 삭제 성공
        '404':
          $ref: '#/components/responses/NotFoundError'

  /live/streams/{stream_id}/start:
    post:
      summary: 라이브 스트림 시작
      description: 라이브 스트림을 시작합니다.
      tags:
        - Live Streams
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
      responses:
        '200':
          description: 시작 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamActionResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /live/streams/{stream_id}/stop:
    post:
      summary: 라이브 스트림 중지
      description: 라이브 스트림을 중지합니다.
      tags:
        - Live Streams
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
      responses:
        '200':
          description: 중지 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamActionResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /live/streams/{stream_id}/viewers:
    get:
      summary: 시청자 목록 조회
      description: 라이브 스트림의 시청자 목록을 조회합니다.
      tags:
        - Viewers
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewerListResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /live/streams/{stream_id}/viewers/{user_id}/block:
    post:
      summary: 시청자 차단
      description: 특정 시청자를 차단합니다.
      tags:
        - Viewers
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          description: 사용자 ID
          schema:
            type: string
      responses:
        '200':
          description: 차단 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      summary: 시청자 차단 해제
      description: 차단된 시청자의 차단을 해제합니다.
      tags:
        - Viewers
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          description: 사용자 ID
          schema:
            type: string
      responses:
        '200':
          description: 차단 해제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /live/streams/{stream_id}/chat:
    get:
      summary: 채팅 메시지 조회
      description: 라이브 스트림의 채팅 메시지를 조회합니다.
      tags:
        - Chat
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
        - name: limit
          in: query
          description: 조회할 메시지 수
          required: false
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: offset
          in: query
          description: 오프셋
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageListResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

    post:
      summary: 채팅 메시지 전송
      description: 라이브 스트림에 채팅 메시지를 전송합니다.
      tags:
        - Chat
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageRequest'
      responses:
        '201':
          description: 전송 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /live/streams/{stream_id}/recording/start:
    post:
      summary: 녹화 시작
      description: 라이브 스트림의 녹화를 시작합니다.
      tags:
        - Recording
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
      responses:
        '200':
          description: 녹화 시작 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingActionResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /live/streams/{stream_id}/recording/stop:
    post:
      summary: 녹화 중지
      description: 라이브 스트림의 녹화를 중지합니다.
      tags:
        - Recording
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
      responses:
        '200':
          description: 녹화 중지 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingActionResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /live/streams/{stream_id}/recordings:
    get:
      summary: 녹화 파일 목록 조회
      description: 라이브 스트림의 녹화 파일 목록을 조회합니다.
      tags:
        - Recording
      parameters:
        - name: stream_id
          in: path
          required: true
          description: 스트림 ID
          schema:
            type: string
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingListResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LiveStream:
      type: object
      properties:
        id:
          type: string
          description: 스트림 ID
        title:
          type: string
          description: 스트림 제목
        description:
          type: string
          description: 스트림 설명
        category:
          type: string
          description: 카테고리
        status:
          type: string
          enum: [ready, live, ended, error]
          description: 스트림 상태
        is_public:
          type: boolean
          description: 공개 여부
        password:
          type: string
          description: 비밀번호 (비공개 스트림)
        max_viewers:
          type: integer
          description: 최대 시청자 수
        current_viewers:
          type: integer
          description: 현재 시청자 수
        rtmp_url:
          type: string
          description: RTMP 업스트림 URL
        stream_key:
          type: string
          description: 스트림 키
        hls_url:
          type: string
          description: HLS 스트리밍 URL
        web_rtc_url:
          type: string
          description: WebRTC 스트리밍 URL
        recording_enabled:
          type: boolean
          description: 녹화 활성화 여부
        chat_enabled:
          type: boolean
          description: 채팅 활성화 여부
        created_at:
          type: string
          format: date-time
          description: 생성 시간
        started_at:
          type: string
          format: date-time
          description: 시작 시간
        ended_at:
          type: string
          format: date-time
          description: 종료 시간

    LiveStreamCreateRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: 스트림 제목
        description:
          type: string
          description: 스트림 설명
        category:
          type: string
          description: 카테고리
        is_public:
          type: boolean
          default: true
          description: 공개 여부
        password:
          type: string
          description: 비밀번호 (비공개 스트림)
        max_viewers:
          type: integer
          default: 1000
          description: 최대 시청자 수
        recording_enabled:
          type: boolean
          default: true
          description: 녹화 활성화 여부
        chat_enabled:
          type: boolean
          default: true
          description: 채팅 활성화 여부
        quality_preset:
          type: string
          enum: [low, medium, high, ultra]
          default: high
          description: 품질 프리셋
        latency_mode:
          type: string
          enum: [normal, low, ultra_low]
          default: normal
          description: 지연 시간 모드

    LiveStreamUpdateRequest:
      type: object
      properties:
        title:
          type: string
          description: 스트림 제목
        description:
          type: string
          description: 스트림 설명
        category:
          type: string
          description: 카테고리
        is_public:
          type: boolean
          description: 공개 여부
        password:
          type: string
          description: 비밀번호
        max_viewers:
          type: integer
          description: 최대 시청자 수
        recording_enabled:
          type: boolean
          description: 녹화 활성화 여부
        chat_enabled:
          type: boolean
          description: 채팅 활성화 여부

    LiveStreamListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            streams:
              type: array
              items:
                $ref: '#/components/schemas/LiveStream'
            pagination:
              $ref: '#/components/schemas/Pagination'

    LiveStreamDetailResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/LiveStream'

    LiveStreamCreateResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/LiveStream'

    LiveStreamActionResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            stream_id:
              type: string
              description: 스트림 ID
            action:
              type: string
              description: 수행된 액션
            timestamp:
              type: string
              format: date-time
              description: 액션 수행 시간

    Viewer:
      type: object
      properties:
        user_id:
          type: string
          description: 사용자 ID
        username:
          type: string
          description: 사용자명
        joined_at:
          type: string
          format: date-time
          description: 참여 시간
        watch_time:
          type: integer
          description: 시청 시간 (초)
        ip_address:
          type: string
          description: IP 주소
        user_agent:
          type: string
          description: 사용자 에이전트

    ViewerListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            viewers:
              type: array
              items:
                $ref: '#/components/schemas/Viewer'
            total_count:
              type: integer
              description: 총 시청자 수

    ChatMessage:
      type: object
      properties:
        id:
          type: string
          description: 메시지 ID
        message:
          type: string
          description: 메시지 내용
        user_id:
          type: string
          description: 사용자 ID
        username:
          type: string
          description: 사용자명
        timestamp:
          type: string
          format: date-time
          description: 전송 시간
        is_moderator:
          type: boolean
          description: 관리자 여부

    ChatMessageRequest:
      type: object
      required:
        - message
        - user_id
        - username
      properties:
        message:
          type: string
          maxLength: 200
          description: 메시지 내용
        user_id:
          type: string
          description: 사용자 ID
        username:
          type: string
          description: 사용자명

    ChatMessageResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/ChatMessage'

    ChatMessageListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            messages:
              type: array
              items:
                $ref: '#/components/schemas/ChatMessage'
            total_count:
              type: integer
              description: 총 메시지 수

    Recording:
      type: object
      properties:
        recording_id:
          type: string
          description: 녹화 ID
        file_url:
          type: string
          description: 파일 URL
        duration:
          type: integer
          description: 녹화 시간 (초)
        file_size:
          type: integer
          description: 파일 크기 (바이트)
        quality:
          type: string
          description: 녹화 품질
        created_at:
          type: string
          format: date-time
          description: 생성 시간

    RecordingActionResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            stream_id:
              type: string
              description: 스트림 ID
            recording_id:
              type: string
              description: 녹화 ID
            action:
              type: string
              description: 수행된 액션
            timestamp:
              type: string
              format: date-time
              description: 액션 수행 시간

    RecordingListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            recordings:
              type: array
              items:
                $ref: '#/components/schemas/Recording'

    ActionResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            action:
              type: string
              description: 수행된 액션
            timestamp:
              type: string
              format: date-time
              description: 액션 수행 시간

    Pagination:
      type: object
      properties:
        page:
          type: integer
          description: 현재 페이지
        per_page:
          type: integer
          description: 페이지당 항목 수
        total:
          type: integer
          description: 전체 항목 수
        total_pages:
          type: integer
          description: 전체 페이지 수

    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          description: 오류 메시지
        code:
          type: string
          description: 오류 코드

  responses:
    BadRequestError:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    UnauthorizedError:
      description: 인증 실패
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundError:
      description: 리소스를 찾을 수 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: 서버 내부 오류
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Live Streams
    description: 라이브 스트림 관리
  - name: Viewers
    description: 시청자 관리
  - name: Chat
    description: 채팅 기능
  - name: Recording
    description: 녹화 기능
